.button {
	position: relative;
	@include inblock(middle);
	touch-action: manipulation;

	padding: buttonPadding(1) (buttonPadding(1) * 2);

	@include fs(buttonFontSize(1));
	line-height: 1;

	@include size(auto buttonHeight(1));
	@include border-radius(1);

	color: $white;
	background-color: $default;
	text-decoration: none;

	font-weight: $button-font-weight;
	text-transform: $button-text-transform;

	border: $button-border-size solid $default;

	&:hover {
		text-decoration: none;
	}

	&:not([disabled]) {
		&:not(.button--outline):hover {
			background-color: darken($default, $button-hover-multi);
			border-color: darken($default, $button-hover-multi);
		}

		&.button--outline {
			background-color: transparent;
			color: $default;

			&:hover {
				background-color: rgba($default, 0.3);
			}
		}
	}

	&[disabled] {
		cursor: not-allowed;
		opacity: 0.4;
	}

	@each $type, $colour in $colours {
		&--#{$type} {
			background-color: $colour;
			border-color: $colour;

			@if ($type == 'white') {
				color: map-get($colours, primary);
			}

			&:not([disabled]) {
				&:not(.button--outline):hover {
					background-color: darken($colour, $button-hover-multi);
					border-color: darken($colour, $button-hover-multi);
				}

				&.button--outline {
					background-color: transparent;
					color: $colour;

					&:hover {
						background-color: rgba($colour, 0.3);
					}
				}
			}
		}
	};

	@each $type, $multi in $button-sizes {
		&--#{$type} {
			padding: buttonPadding($multi) (buttonPadding($multi) * 2);
			height: buttonHeight($multi);
			@include fs(buttonFontSize($multi));
			@include border-radius($multi);
		}
	}
}


.button-group {
	position: relative;
	@include inblock(middle);
	@include clearfix();

	.button + .button,
	.button + .button-group,
	.button-group + .button,
	.button-group + .button-group {
		margin-left: (-1 * (1px));
	}

	@if $button-border-radius-enabled == true {
		& > .button {
			&:last-child:not(:first-child) {
				@include border-left-radius(0);
			}
		}
	}

	& > .button {
		@if $button-border-radius-enabled == true {
			&:not(:first-child):not(:last-child) {
				border-radius: 0;
			}
		}

		&:first-child {
			margin-left: 0;

			@if $button-border-radius-enabled == true {
				&:not(:last-child) {
					@include border-right-radius(0);
				}
			}
		}
	}

	@if $button-border-radius-enabled == true {
		& > .button-group {
			&:not(:first-child):not(:last-child) {
				& > .button {
					border-radius: 0;
				}
			}

			&:first-child:not(:last-child) {
				& > .button:last-child {
					@include border-right-radius(0);
				}
			}

			&:last-child:not(:first-child) {
				& > .button:first-child {
					@include border-left-radius(0);
				}
			}
		}
	}

	& > .button-group, & > .button {
		float: left;
	}
}
